---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kyoo
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: kyoo
      version: 4.7.1
      sourceRef:
        kind: HelmRepository
        name: zoriya
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    global:
      meilisearch:
        infra:
          existingSecret: &secret kyoo-secret
        kyoo_back:
          masterkeyKey: MEILI_MASTER_KEY
          existingSecret: *secret
      postgres:
        infra:
          user: kyoo
          passwordKey: password
          existingSecret: postgres-kyoo-app
        kyoo_back:
          host: postgres-kyoo-back-rw
          kyoo_migrations: &psql
            userKey: user
            passwordKey: password
            existingSecret: postgres-kyoo-back-app
          kyoo_back: *psql
        kyoo_transcoder:
          host: postgres-kyoo-transcode-rw
          database: kyoo_transcode
          sslmode: require
          kyoo_transcoder:
            userKey: user
            passwordKey: password
            existingSecret: postgres-kyoo-transcode-app
      rabbitmq:
        host: kyoo-rabbitmq
        infra:
          # MAKE SURE THIS IS SET TO THE PASSWORD YOU FUCKING DUMBASS
          passwordKey: rabbitmq_password
          keyErlangCookie: rabbitmq_cookie
          existingSecret: *secret
        kyoo_autosync: &rabbit
          userKey: rabbitmq_user
          passwordKey: rabbitmq_password
          existingSecret: *secret
        kyoo_back: *rabbit
        kyoo_matcher: *rabbit
        kyoo_scanner: *rabbit

    kyoo:
      address: https://kyoo.${SECRET_DOMAIN}
      transcoderAcceleration: disabled # hardware acceleration profile (valid values: disabled, vaapi, qsv, nvidia)
      apikey:
        existingSecret: *secret
        apikeyKey: KYOO_API_KEY
      oidc_providers:
        - name: Authentik
          existingSecret: *secret
          clientIdKey: OIDC_AUTHENTIK_CLIENTID
          clientSecretKey: OIDC_AUTHENTIK_SECRET
          logo: https://raw.githubusercontent.com/goauthentik/authentik/refs/heads/main/website/static/img/icon.png
          authorizationAddress: https://authentik.${SECRET_DOMAIN}.com/application/o/authorize/
          tokenAddress: https://authentik.${SECRET_DOMAIN}.com/application/o/token/
          profileAddress: https://authentik.${SECRET_DOMAIN}.com/application/o/userinfo/
          scope: "openid email profile"
          authMethod: ClientSecretBasic

    media:
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
      volumeMounts:
        - mountPath: &path /media
          name: media
          readOnly: true
      baseMountPath: *path

    contentdatabase:
      tmdb:
        apikeyKey: TMDB_API_KEY
        existingSecret: *secret
      tvdb:
        apikeyKey: TVDB_APIKEY
        pinKey: TVDB_PIN
        existingSecret: *secret

    autosync:
      kyoo_autosync:
        resources:
          requests:
            cpu: 5m
            memory: 20Mi
          limits:
            cpu: 100m
            memory: 100Mi

    back:
      kyoo_back:
        resources:
          requests:
            cpu: 10m
            memory: 1Gi
          limits:
            cpu: 4000m
            memory: 8Gi
      persistence:
        existingClaim: kyoo-transcode

    front:
      kyoo_front:
        resources:
          requests:
            cpu: 20m
            memory: 50Mi
          limits:
            cpu: 1
            memory: 500Mi

    matcher:
      kyoo_matcher:
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 1
            memory: 500Mi

    scanner:
      kyoo_scanner:
        resources:
          requests:
            cpu: 5m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 1Gi

    transcoder:
      kyoo_transcoder:
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
          limits:
            cpu: 1
            memory: 8Gi

    ingress:
      enabled: true
      ingressClassName: external
      host: kyoo.${SECRET_DOMAIN}
      annotations:
        nginx.ingress.kubernetes.io/custom-http-errors: "404,503"
      tls: true

    meilisearch:
      enabled: true
    rabbitmq:
      enabled: true
      auth:
        username: kyoo
