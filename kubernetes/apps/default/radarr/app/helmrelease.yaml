---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: radarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      # -- image repository
      repository: ghcr.io/onedr0p/radarr-develop
      # @default -- chart.appVersion
      tag: 5.3.5.8592@sha256:60d0a8a04a062654e27be6f1d8d780be2e821bd0e7815201f4bb32df8090b00b
      # -- image pull policy
      pullPolicy: IfNotPresent
    env:
      TZ: America/Chicago
      RADARR__INSTANCE_NAME: Radarr
    envFrom:
      - secretRef:
          name: radarr-secret
    service:
      main:
        enabled: true
        ports:
          http:
            port: &radarr-port 7878
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/icon: mdi:television-classic
        hosts:
          - host: &radarr-host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *radarr-port
        tls:
          - hosts:
              - *radarr-host
    probes:
      liveness:
        enabled: true
        custom: true
        spec:
          exec:
            command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while
                read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          failureThreshold: 10
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config
        retain: true
      media:
        enabled: true
        mountPath: /media
        existingClaim: media
        retain: true
      downloads:
        enabled: true
        mountPath: /downloads-usenet
        existingClaim: sabnzbd-downloads
        retain: true
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [1000]
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
