apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: romm
  namespace: games
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [1000]
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          main:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 3.7.3@sha256:45bfde6088e217b0f050064ca2146bbbf052a559112567cf129e17f52fd07f5b
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: romm-secret
            env:
              TZ: America/Chicago
              ROMM_DB_DRIVER: postgresql
              ROMM_BASE_PATH: /romm
              ENABLE_SCHEDULED_RESCAN: "true"
              SCHEDULED_RESCAN_CRON: "0 3 * * *"
              DISABLE_USERPASS_LOGIN: false
              OIDC_ENABLED: true
              OIDC_PROVIDER: authentik
              OIDC_REDIRECT_URI: https://romm.${SECRET_DOMAIN}/api/oauth/openid
              OIDC_SERVER_APPLICATION_URL: https://authentik.${SECRET_DOMAIN}/application/o/romm
              DB_HOST:
                valueFrom:
                  secretKeyRef:
                    name: postgres-romm-app
                    key: host
              DB_NAME:
                valueFrom:
                  secretKeyRef:
                    name: postgres-romm-app
                    key: dbname
              DB_PASSWD:
                valueFrom:
                  secretKeyRef:
                    name: postgres-romm-app
                    key: password
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: postgres-romm-app
                    key: user
    service:
      main:
        enabled: true
        ports:
          http:
            port: &romm-port 8080
    ingress:
      main:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          hajimari.io/icon: mdi:nintendo-game-boy
        hosts:
          - host: &romm-host romm.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *romm-host
        className: internal
    persistence:
      config:
        enabled: true
        existingClaim: romm-config
        retain: true
        globalMounts:
          - path: /romm/config
      assets:
        enabled: true
        existingClaim: romm-assets
        retain: true
        globalMounts:
          - path: /romm/assets
      resources:
        enabled: true
        existingClaim: romm-resources
        retain: true
        globalMounts:
          - path: /romm/resources
      redis-data:
        enabled: true
        existingClaim: romm-redis-data
        retain: true
        globalMounts:
          - path: /redis-data
      games:
        enabled: true
        existingClaim: games
        retain: true
        globalMounts:
          - path: /romm/library
