---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: nginx-external
  namespace: &namespace networking
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.10.0
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  maxHistory: 2
  install:
    timeout: 20m
    remediation:
      retries: 3
  upgrade:
    timeout: 20m
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cloudflared
      namespace: networking
  values:
    fullnameOverride: nginx-external
    controller:
      allowSnippetAnnotations: true
      extraVolumes:
        - name: crowdsec-bouncer-plugin
          emptyDir: {}
      extraInitContainers:
        - name: init-clone-crowdsec-bouncer
          image: crowdsecurity/lua-bouncer-plugin
          imagePullPolicy: IfNotPresent
          env:
            - name: API_URL
              value: "http://crowdsec-service.security.svc.cluster.local:8080" # crowdsec lapi service-name
            - name: API_KEY
              value: "${INGRESS_API_KEY}"
            - name: BOUNCER_CONFIG
              value: "/crowdsec/crowdsec-bouncer.conf"
            - name: BAN_TEMPLATE_PATH
              value: /etc/nginx/lua/plugins/crowdsec/templates/ban.html
            - name: CAPTCHA_TEMPLATE_PATH
              value: /etc/nginx/lua/plugins/crowdsec/templates/captcha.html
          command: ['sh', '-c', "sh /docker_start.sh; mkdir -p /lua_plugins/crowdsec/; cp -R /crowdsec/* /lua_plugins/crowdsec/"]
          volumeMounts:
            - name: crowdsec-bouncer-plugin
              mountPath: /lua_plugins
      extraVolumeMounts:
        - name: crowdsec-bouncer-plugin
          mountPath: /etc/nginx/lua/plugins/crowdsec
          subPath: crowdsec
      replicaCount: 3
      service:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "external.${SECRET_DOMAIN}"
          io.cilium/lb-ipam-ips: "10.0.10.148"
        externalTrafficPolicy: Cluster
      ingressClassResource:
        name: external
        default: false
        controllerValue: k8s.io/external
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["external"]
      config:
        server-snippet: |
          resolver local=on ipv6=off;
        plugins: "crowdsec"
        lua-shared-dicts: "crowdsec_cache: 50m"
        client-body-buffer-size: 100M
        client-body-timeout: 120
        client-header-timeout: 120
        custom-http-errors: 400,401,403,404,500,502,503,504
        enable-brotli: "true"
        enable-real-ip: "true"
        hide-headers: Server,X-Powered-By
        hsts-max-age: 31449600
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for",
          "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args",
          "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: TLSv1.3 TLSv1.2
        block-user-agents: "GPTBot,~*GPTBot*,ChatGPT-User,~*ChatGPT-User*,Google-Extended,~*Google-Extended*,CCBot,~*CCBot*,Omgilibot,~*Omgilibot*,FacebookBot,~*FacebookBot*" # taken from https://github.com/superseriousbusiness/gotosocial/blob/main/internal/web/robots.go
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: *namespace
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: "networking/${SECRET_DOMAIN/./-}-production-tls"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/instance: nginx-external
              app.kubernetes.io/component: controller
      resources:
        requests:
          cpu: 10m
          memory: 250Mi
        limits:
          memory: 500Mi
    defaultBackend:
      enabled: true
      image:
        repository: ghcr.io/tarampampam/error-pages
        tag: 2.26.0
      extraEnvs:
        - { name: TEMPLATE_NAME, value: cats }
        - { name: SHOW_DETAILS, value: "false" }
